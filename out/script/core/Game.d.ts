import { IApi, MagicLevel } from "core/Api";
import { Entity } from "core/Entity";
import { Readout } from "core/Readout";
import { Sound } from "core/Sound";
import { TileType } from "core/Tiles";
import { World } from "core/World";
import { EvilWizard } from "entities/EvilWizard";
import { Canvas } from "util/Canvas";
import { IVector } from "util/Vector";
export declare class Game implements IApi {
    world: World;
    canvas: Canvas;
    readout: Readout;
    player: EvilWizard;
    playerLevel: MagicLevel;
    sounds: Sound;
    private _entities;
    private slicedEntities;
    readonly entities: Entity[];
    private isRunning;
    private _paused;
    paused: boolean;
    private time;
    private dungeonGenerator;
    private controls;
    private abilities;
    load(): Promise<void>;
    start(): void;
    reset(): void;
    stop(): void;
    getTileBlocker(position: IVector, exclude?: Entity[]): TileType | Entity | undefined;
    getCorpseAt(position: IVector): Entity | undefined;
    getEntityAt(position: IVector, exclude?: Entity[], offsetPosition?: boolean): Entity | undefined;
    addEntity(entity: Entity, position: IVector): void;
    removeEntity(corpse: Entity): void;
    private loop();
    private update();
    private levelUp();
    private render();
    private newLevel();
}
